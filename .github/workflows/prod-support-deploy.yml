name: Deploy Prod-support to Amazon ECR

# on:
#   push:
#     branches:
#       - prod-support


env:
  REPO_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/meedl-prod-support
  ECR_REPOSITORY: meedl-prod-support
  AWS_REGION: us-east-1
  CLUSTER: meedl
  SERVICE: meedl-prod-support
  EMAILS: 'sam@semicolon.africa,joshua.o@semicolon.africa,ladipo@semicolon.africa,t.lemon@semicolon.africa,divinemercy601@gmail.com,qudusa55@gmail.com,o.koleaje@semicolon.africa,ned@semicolon.africa,tade@semicolon.africa,moyinoluwa@semicolon.africa,mariam@semicolon.africa,i.james@semicolon.africa,david@semicolon.africa,abigail@semicolon.africa,precious@semicolon.africa,dapo@semicolon.africa,pauline@semicolon.africa,davidoso@semicolon.africa,henry@semicolon.africa'
  IV_AES_KEY: ${{ secrets.IV_AES_KEY }}
  AES_SECRET_KEY: ${{ secrets.AES_SECRET_KEY }}

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build the application
        env:
          CREDIT_REGISTRY_EMAIL: ${{ secrets.CREDIT_REGISTRY_EMAIL_ADDRESS }}
          CREDIT_REGISTRY_SUBSCRIBER_ID: ${{ secrets.CREDIT_REGISTRY_SUBSCRIBERID }}
          CREDIT_REGISTRY_PASSWORD: ${{ secrets.CREDIT_REGISTRY_AGENT_PASSWORD }}
          CREDIT_REGISTRY_BASE_URL: ${{ secrets.CREDIT_REGISTRY_URL }}
          TEST_BVN: ${{ secrets.TEST_BVN_VALUE }}
          IV_AES_KEY: ${{ secrets.IV_AES_KEY }}
          AES_SECRET_KEY: ${{ secrets.AES_SECRET_KEY }}
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: v1.0.1
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV




    
