name: Commit and PR Status Tracker

on:
  schedule:
    - cron: "0 10 * * *"
    - cron: "0 17 * * *"
    - cron: "0 14 * * *"
    - cron: "0 23 * * *"

jobs:
  commit-pr-tracker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set permissions for templates
        run: |
          chmod 644 templates/*.html

      - name: Set environment variables
        env:
          SMTP_SERVER: semicolon.africa
          SMTP_PORT: 465
          SMTP_USERNAME: builds@semicolon.africa
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          EMAILS: 'ladipo@semicolon.africa,sam@semicolon.africa,t.lemon@semicolon.africa,divinemercy601@gmail.com,qudusa55@gmail.com,o.koleaje@semicolon.africa,ned@semicolon.africa,tade@semicolon.africa,moyinoluwa@semicolon.africa,mariam@semicolon.africa,i.james@semicolon.africa,david@semicolon.africa,abigail@semicolon.africa,precious@semicolon.africa,dapo@semicolon.africa,pauline@semicolon.africa,pauline@semicolon.africa,davidoso@semicolon.africa,henry@semicolon.africa '
        run: |
          TIMESTAMP=$(date -u -d "4 hours ago" +"%Y-%m-%dT%H:%M:%SZ")

          SUCCESSFUL_COMMITS=$(gh api repos/${{ github.repository }}/commits \
            --paginate -q '.[].commit | select(.verification.verified) | .author.name' \
            --since "$TIMESTAMP" | wc -l)

          UNSUCCESSFUL_COMMITS=$(gh api repos/${{ github.repository }}/commits \
            --paginate -q '.[].commit | select(.verification.verified | not) | .author.name' \
            --since "$TIMESTAMP" | wc -l)

          SUCCESSFUL_PRS=$(gh api repos/${{ github.repository }}/pulls \
            --paginate -q '.[] | select(.merged_at != null) | .user.login' \
            --state merged --since "$TIMESTAMP" | wc -l)

          UNSUCCESSFUL_PRS=$(gh api repos/${{ github.repository }}/pulls \
            --paginate -q '.[] | select(.merged_at == null) | .user.login' \
            --state closed --since "$TIMESTAMP" | wc -l)

          echo "SUCCESSFUL_COMMITS=${SUCCESSFUL_COMMITS}" >> $GITHUB_ENV
          echo "UNSUCCESSFUL_COMMITS=${UNSUCCESSFUL_COMMITS}" >> $GITHUB_ENV
          echo "SUCCESSFUL_PRS=${SUCCESSFUL_PRS}" >> $GITHUB_ENV
          echo "UNSUCCESSFUL_PRS=${UNSUCCESSFUL_PRS}" >> $GITHUB_ENV

      - name: Send Inactivity Email
        if: env.SUCCESSFUL_COMMITS == '0' && env.UNSUCCESSFUL_COMMITS == '0' && env.SUCCESSFUL_PRS == '0' && env.UNSUCCESSFUL_PRS == '0'
        run: |
          IFS=',' read -r -a email_array <<< "${EMAILS}"
          for email in "${email_array[@]}"; do
            cat templates/inactivity_email.html | \
            sed "s/{{TIMESTAMP}}/$(date)/g" > /tmp/inactivity_email.html

            curl --verbose --ssl-reqd \
              --url "smtps://${SMTP_SERVER}:${SMTP_PORT}" \
              --mail-from "builds@semicolon.africa" \
              --mail-rcpt "$email" \
              --user "${SMTP_USERNAME}:${SMTP_PASSWORD}" \
              --upload-file /tmp/inactivity_email.html
          done

      - name: Send Activity Summary Email
        if: env.SUCCESSFUL_COMMITS != '0' || env.UNSUCCESSFUL_COMMITS != '0' || env.SUCCESSFUL_PRS != '0' || env.UNSUCCESSFUL_PRS != '0'
        run: |
          IFS=',' read -r -a email_array <<< "${EMAILS}"
          for email in "${email_array[@]}"; do
            cat templates/activity_summary.html | \
            sed -e "s/{{SUCCESSFUL_COMMITS}}/${{ env.SUCCESSFUL_COMMITS }}/g" \
                -e "s/{{UNSUCCESSFUL_COMMITS}}/${{ env.UNSUCCESSFUL_COMMITS }}/g" \
                -e "s/{{SUCCESSFUL_PRS}}/${{ env.SUCCESSFUL_PRS }}/g" \
                -e "s/{{UNSUCCESSFUL_PRS}}/${{ env.UNSUCCESSFUL_PRS }}/g" > /tmp/activity_summary.html

            curl --verbose --ssl-reqd \
              --url "smtps://${SMTP_SERVER}:${SMTP_PORT}" \
              --mail-from "builds@semicolon.africa" \
              --mail-rcpt "$email" \
              --user "${SMTP_USERNAME}:${SMTP_PASSWORD}" \
              --upload-file /tmp/activity_summary.html
          done
