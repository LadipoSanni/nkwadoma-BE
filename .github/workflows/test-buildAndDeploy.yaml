name: Deploy Systest to Local

on:
  pull_request:
    branches:
      - 'dev'
  push:
    branches:
      - 'dev'

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build the application
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
      - name: Build and Tag Docker image
        run: |
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/nkwadoma:alpha
          echo "Using image tag: $IMAGE_TAG"
          docker build -t nkwadoma:$GITHUB_SHA -f Dockerfile .  # add --build-arg if needed
          docker tag nkwadoma:$GITHUB_SHA $IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Username: ${{ secrets.DOCKER_USERNAME }}" #to be removed
      - name: Push Docker image to Docker Hub
        run: docker push "$IMAGE_TAG"
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      
  deploy-to-local:
    runs-on: self-hosted
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Download env file from S3
        run: |
          ENV_FILE_PATH="/home/cloud-group/nkwadoma-systest.env"
          aws s3 cp s3://semicolon-delivery/nkwadoma/backend/systest/nkwadoma.env $ENV_FILE_PATH --region eu-west-1
      - name: Free port 8768 if in use
        run: |
          sudo fuser -k 8768/tcp || true
      - name: Restart container with auto-restart policy
        run: |
          CONTAINER_NAME=nkwadoma_container
          ENV_FILE_PATH="/home/cloud-group/nkwadoma-systest.env"
          IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/nkwadoma:alpha
          if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
          fi
          docker network inspect meedl-network >/dev/null 2>&1 || docker network create meedl-network
          docker pull $IMAGE_TAG
          nohup docker run -d --env-file $ENV_FILE_PATH --network meedl-network --name $CONTAINER_NAME -p 8768:8768 \
            --restart unless-stopped \
            $IMAGE_TAG > /dev/null 2>&1 &
      - name: Confirm Deployment Success
        run: |
          sleep 10
          if docker ps --format '{{.Names}}' | grep -q "nkwadoma_container"; then
            echo "âœ… Deployment to local machine successful!"
