## This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "dev", "prod-support" ]
  pull_request:
    branches: [ "main", "dev", "prod-support" ]

env:
  KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
  KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
  KEYCLOAK_SERVER: ${{ secrets.KEYCLOAK_SERVER }}
  KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
  KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
  KEYCLOAK_USERNAME: ${{ secrets.KEYCLOAK_USERNAME }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  FRONTEND_BASE_URL: ${{ secrets.FRONTEND_BASE_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION}}
  PROFILE: dev
  SUPER_ADMIN_FIRST_NAME: ${{ secrets.SUPER_ADMIN_FIRST_NAME }}
  SUPER_ADMIN_LAST_NAME: ${{ secrets.SUPER_ADMIN_LAST_NAME }}
  SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
  CREATED_BY: ${{ secrets.CREATED_BY }}
  MAIL_HOST: ${{ secrets.MAIL_HOST }}
  MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
  MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
  MAIL_SENDER: ${{ secrets.MAIL_SENDER }}
  MAIL_PORT: ${{ secrets.MAIL_PORT }}
  
  
  
jobs:

  test:
    name: Unit Test
    runs-on: ubuntu-latest
      
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nkwadoma_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disable shallow clones for better relevancy of analysis

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres is ready"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 1
          done
          

 
      - uses: actions/checkout@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Run Maven Tests with Debug

        env:
          KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
          KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
          KEYCLOAK_SERVER: ${{ secrets.KEYCLOAK_SERVER }}
          KEYCLOAK_USERNAME: ${{ secrets.KEYCLOAK_USERNAME }}
          KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
          DATABASE_URL: jdbc:postgresql://localhost:5432/nkwadoma_db
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          FRONTEND_BASE_URL: ${{ secrets.FRONTEND_BASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION}}
          PROFILE: dev
          SUPER_ADMIN_FIRST_NAME: ${{ secrets.SUPER_ADMIN_FIRST_NAME }}
          SUPER_ADMIN_LAST_NAME: ${{ secrets.SUPER_ADMIN_LAST_NAME }}
          SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
          CREATED_BY: ${{ secrets.CREATED_BY }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SENDER: ${{ secrets.MAIL_SENDER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          
        run: mvn -B clean package  





  build:
    name: Build and analyze
    needs: ["test"]
    runs-on: ubuntu-latest
    
    # Define environment variables once for the entire job
    env:
          KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
          KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
          KEYCLOAK_SERVER: ${{ secrets.KEYCLOAK_SERVER }}
          KEYCLOAK_USERNAME: ${{ secrets.KEYCLOAK_USERNAME }}
          KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
          DATABASE_URL: jdbc:postgresql://localhost:5432/nkwadoma_db
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          FRONTEND_BASE_URL: ${{ secrets.FRONTEND_BASE_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION}}
          PROFILE: dev
          SUPER_ADMIN_FIRST_NAME: ${{ secrets.SUPER_ADMIN_FIRST_NAME }}
          SUPER_ADMIN_LAST_NAME: ${{ secrets.SUPER_ADMIN_LAST_NAME }}
          SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
          CREATED_BY: ${{ secrets.CREATED_BY }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SENDER: ${{ secrets.MAIL_SENDER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}


    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nkwadoma_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disable shallow clones for better relevancy of analysis

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres is ready"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 1
          done
          

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Maven Package for Dev
        if: github.ref == 'refs/heads/dev'  # Use dev branch for dev environment
        run: mvn -B clean package -Dspring.profiles.active=dev   

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze with SonarQube
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=Nkwadoma-Backend \
            -Dsonar.projectName='Nkwadoma Backend' 
