name: Java CI with Maven

on:
  push:
    branches: 
      - main
      - dev
      - systest

env:
  PROFILE: dev
  AWS_REGION: "eu-west-1"
  API_VERSIONING: /api/v1
  DEV_FRONTEND_BASE_URL: http://localhost:3000

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nkwadoma_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --mount type=tmpfs,destination=/var/lib/postgresql/data
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      # Install PostgreSQL client
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      # Wait until Postgres is ready
      - name: Wait for Postgres
        run: |
          echo "⏳ Waiting for PostgreSQL to start..."
          for i in {1..30}; do
            if pg_isready -h localhost -U postgres > /dev/null 2>&1; then
              echo "✅ PostgreSQL is ready!"
              break
            fi
            sleep 2
          done

      # Drop and recreate the test database
      - name: Recreate Test Database
        run: |
          echo "Dropping and recreating test DB..."
          PGPASSWORD=postgres psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS nkwadoma_db;"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE nkwadoma_db;"
          echo "✅ Clean database ready."

      # Optionally seed the database
      - name: Optionally Seed Database
        if: ${{ hashFiles('src/test/resources/sql/seed.sql') != '' }}
        run: |
          echo "Seeding DB..."
          PGPASSWORD=postgres psql -h localhost -U postgres -d nkwadoma_db -f src/test/resources/sql/seed.sql
          echo "✅ Seeding complete."

      # Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      # Run unit tests
      - name: Run Maven Tests with Surefire
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
          KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
          KEYCLOAK_SERVER: ${{ secrets.KEYCLOAK_SERVER }}
          KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          KEYCLOAK_CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
          KEYCLOAK_USERNAME: ${{ secrets.KEYCLOAK_USERNAME }}
          FRONTEND_BASE_URL: ${{ secrets.FRONTEND_BASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
          SUPER_ADMIN_FIRST_NAME: ${{ secrets.SUPER_ADMIN_FIRST_NAME }}
          SUPER_ADMIN_LAST_NAME: ${{ secrets.SUPER_ADMIN_LAST_NAME }}
          SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
          CREATED_BY: ${{ secrets.CREATED_BY }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_SENDER: ${{ secrets.MAIL_SENDER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          CREDIT_REGISTRY_EMAIL_ADDRESS: ${{ secrets.CREDIT_REGISTRY_EMAIL_ADDRESS }}
          CREDIT_REGISTRY_SUBSCRIBERID: ${{ secrets.CREDIT_REGISTRY_SUBSCRIBERID }}
          CREDIT_REGISTRY_AGENT_PASSWORD: ${{ secrets.CREDIT_REGISTRY_AGENT_PASSWORD }}
          CREDIT_REGISTRY_URL: ${{ secrets.CREDIT_REGISTRY_URL }}
          TEST_BVN_VALUE: ${{ secrets.TEST_BVN_VALUE }}
          IV_AES_KEY: ${{ secrets.IV_AES_KEY }}
          AES_SECRET_KEY: ${{ secrets.AES_SECRET_KEY }}
        run: mvn -B clean test

      # Upload Surefire reports (always runs, even if tests fail)
      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/

  build:
    name: Build and Analyze
    needs: ["test"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build JAR
        run: mvn -B clean package -DskipTests
