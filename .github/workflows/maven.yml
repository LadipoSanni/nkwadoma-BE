name: Java CI with Maven

on:
  push:
    branches: 
      - main
      - dev
      - systest

env:
  PROFILE: dev
  AWS_REGION: "eu-west-1"
  API_VERSIONING: /api/v1
  DEV_FRONTEND_BASE_URL: http://localhost:3000

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nkwadoma_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --mount type=tmpfs,destination=/var/lib/postgresql/data
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      # Install PostgreSQL client
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      # Wait until Postgres is ready
      - name: Wait for Postgres
        run: |
          echo "⏳ Waiting for PostgreSQL to start..."
          for i in {1..30}; do
            if pg_isready -h localhost -U postgres > /dev/null 2>&1; then
              echo "✅ PostgreSQL is ready!"
              break
            fi
            sleep 2
          done


      # Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Run Maven Tests with Surefire (with env from S3)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
        run: |
          echo "⬇️ Downloading environment file from S3..."
          aws s3 cp s3://semicolon-delivery/nkwadoma/backend/systest/nkwadoma.env --region eu-west-1 nkwadoma.env
      
          echo "✅ Environment file downloaded."
      
          echo "🧹 Cleaning and loading environment variables..."
          # Convert Spring Boot .env style to valid shell exports (ignore invalid ones)
          grep -E '^[A-Za-z_][A-Za-z0-9_]*=' nkwadoma.env > valid_env.sh
          set -a
          source valid_env.sh
          set +a
      
          echo "🧹 Dropping and recreating test DB..."
          PGPASSWORD="$DATABASE_PASSWORD" psql -h localhost -U "$DATABASE_USERNAME" -c "DROP DATABASE IF EXISTS nkwadoma_db;"
          PGPASSWORD="$DATABASE_PASSWORD" psql -h localhost -U "$DATABASE_USERNAME" -c "CREATE DATABASE nkwadoma_db;"
          echo "✅ Clean database ready."
      
          echo "🚀 Running Maven tests..."
          mvn -B clean test


      # Upload Surefire reports (always runs, even if tests fail)
      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/

  build:
    name: Build and Analyze
    needs: ["test"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build JAR
        run: mvn -B clean package -DskipTests
