name: Java CI with Maven

on:
  push:
    branches:
      - systest

env:
  PROFILE: systest
  AWS_REGION: "eu-west-1"
  API_VERSIONING: /api/v1
  DEV_FRONTEND_BASE_URL: http://localhost:3000

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: meedl_build
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --mount type=tmpfs,destination=/var/lib/postgresql/data
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install PostgreSQL client
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client curl

      # üïí Wait for PostgreSQL
      - name: Wait for PostgreSQL
        run: |
          echo "‚è≥ Waiting for PostgreSQL to start..."
          for i in {1..30}; do
            if pg_isready -h localhost -U postgres > /dev/null 2>&1; then
              echo "‚úÖ PostgreSQL is ready!"
              break
            fi
            sleep 2
          done

      # üß© Start Keycloak with mounted meedl-prod realm
      - name: Start Keycloak container (import meedl-dev realm)
        run: |
          echo "üöÄ Starting Keycloak with meedl-dev realm import..."
          docker run -d \
            --name keycloak \
            -e KEYCLOAK_ADMIN=admin \
            -e KEYCLOAK_ADMIN_PASSWORD=admin \
            -p 8081:8080 \
            -v $PWD/backend/keycloak/realms/meedl-dev.json:/opt/keycloak/data/import/meedl-dev.json \
            quay.io/keycloak/keycloak:22.0.5 start-dev --import-realm

          echo "‚è≥ Waiting for Keycloak (port 8081) to be ready..."
          for i in {1..60}; do
            if curl -fs http://localhost:8081/realms/meedl-prod > /dev/null 2>&1; then
              echo "‚úÖ Keycloak realm meedl-dev is available!"
              break
            fi
            echo "Still waiting... ($i)"
            sleep 5
          done

          echo "üîç Confirming Keycloak import contents..."
          docker exec keycloak ls /opt/keycloak/data/import || true

      # ‚òï Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      # üß™ Run tests
      - name: Run Maven Tests with Surefire (with env from S3)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
        run: |
          echo "‚¨áÔ∏è Downloading environment file from S3..."
          aws s3 cp s3://semicolon-delivery/nkwadoma/backend/systest/nkwadoma.env --region eu-west-1 nkwadoma.env
          echo "‚úÖ Environment file downloaded."

          echo "üßπ Extracting shell-safe environment variables..."
          grep -E '^[A-Z0-9_]+=' nkwadoma.env > safe_env.sh || true

          echo "ü©π Quoting values with spaces..."
          sed -i 's/^\([^=]*\)=\(.*[[:space:]].*\)$/\1=\"\2\"/' safe_env.sh

          echo "üì¶ Loading valid environment variables..."
          set -a
          source safe_env.sh || true
          set +a
          
          echo "üîê Overriding Keycloak settings for CI..."
          export KEYCLOAK_REALM=meedl-dev
          export KEYCLOAK_SERVER_URL=http://localhost:8081
          export JWT_ISSUER_URI=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}
          export SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=$JWT_ISSUER_URI
          export SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=${KEYCLOAK_SERVER_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
          
          echo "‚úÖ Keycloak overrides set for test realm: $KEYCLOAK_REALM"

          echo "üîß Overriding DB settings for CI..."
          export DATABASE_URL=jdbc:postgresql://localhost:5432/meedl_build
          export DATABASE_USERNAME=postgres
          export DATABASE_PASSWORD=postgres
          export SPRING_DATASOURCE_URL=$DATABASE_URL
          export SPRING_DATASOURCE_USERNAME=$DATABASE_USERNAME
          export SPRING_DATASOURCE_PASSWORD=$DATABASE_PASSWORD
          export SPRING_FLYWAY_VALIDATE_ON_MIGRATE=true
      
          echo "üßπ Resetting local test DB..."
          PGPASSWORD=postgres psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS meedl_build;"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE meedl_build;"
          echo "‚úÖ Fresh local database ready."

          echo "üöÄ Running Maven tests..."
          mvn -B clean test

      # üìä Upload Surefire reports
      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/

  build:
    name: Build and Analyze
    needs: ["test"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build JAR
        run: mvn -B clean package -DskipTests
