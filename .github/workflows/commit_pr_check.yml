name: Commit and PR Status Tracker

on:
  schedule:
    - cron: "0 9 * * *"
    - cron: "0 11 * * *"
    - cron: "0 13 * * *"
    - cron: "0 14 * * *"
    - cron: "0 17 * * *"
    

jobs:
  commit-pr-tracker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Environment Variables
        id: vars
        run: |
          TIMESTAMP=$(date --utc --date='4 hours ago' +%Y-%m-%dT%H:%M:%SZ)
          PROJECT_NAME="Nkwadoma Backend"
          DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
          TASK_BRANCH=${{ github.head_ref || github.ref_name }}
          TAG="${PROJECT_NAME}-${DEFAULT_BRANCH}-${TASK_BRANCH}"

          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "SMTP_SERVER=semicolon.africa" >> $GITHUB_ENV
          echo "SMTP_PORT=465" >> $GITHUB_ENV
          echo "SMTP_USERNAME=builds@semicolon.africa" >> $GITHUB_ENV
          echo "EMAILS=ladipo@semicolon.africa,joshua.o@semicolon.africa" >> $GITHUB_ENV

      - name: Get Recent PR and Build Activity
        id: activity
        run: |
          # Fetch merged PRs in the last 4 hours
          SUCCESSFUL_PRS=$(gh api repos/${{ github.repository }}/pulls \
            --paginate -q '.[] | select(.merged_at > "'$TIMESTAMP'") | .number' | wc -l)

          # Fetch successful builds in the last 4 hours using Actions API
          SUCCESSFUL_BUILDS=$(gh api repos/${{ github.repository }}/actions/runs \
            --paginate -q '.workflow_runs[] | select(.conclusion == "success" and .created_at > "'$TIMESTAMP'") | .id' | wc -l)

          # Fetch failed builds in the last 4 hours
          FAILED_BUILDS=$(gh api repos/${{ github.repository }}/actions/runs \
            --paginate -q '.workflow_runs[] | select(.conclusion == "failure" and .created_at > "'$TIMESTAMP'") | .id' | wc -l)

          echo "SUCCESSFUL_PRS=${SUCCESSFUL_PRS}" >> $GITHUB_ENV
          echo "SUCCESSFUL_BUILDS=${SUCCESSFUL_BUILDS}" >> $GITHUB_ENV
          echo "FAILED_BUILDS=${FAILED_BUILDS}" >> $GITHUB_ENV

      - name: Send Inactivity Email
        if: ${{ env.SUCCESSFUL_PRS == '0' && env.SUCCESSFUL_BUILDS == '0' && env.FAILED_BUILDS == '0' }}
        env:
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          chmod +x .github/workflows/scripts/inactivity_email.sh
          .github/workflows/scripts/inactivity_email.sh \
            "${{ env.SMTP_SERVER }}" "${{ env.SMTP_PORT }}" \
            "${{ env.SMTP_USERNAME }}" "${{ env.SMTP_PASSWORD }}" \
            "${{ env.EMAILS }}" "${{ env.TIMESTAMP }}"

      - name: Send Activity Summary Email
        if: ${{ env.SUCCESSFUL_PRS != '0' || env.SUCCESSFUL_BUILDS != '0' || env.FAILED_BUILDS != '0' }}
        env:
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          chmod +x .github/workflows/scripts/activity_email.sh
          .github/workflows/scripts/activity_email.sh \
            "${{ env.SMTP_SERVER }}" "${{ env.SMTP_PORT }}" \
            "${{ env.SMTP_USERNAME }}" "${{ env.SMTP_PASSWORD }}" \
            "${{ env.EMAILS }}" "${{ env.SUCCESSFUL_PRS }}" \
            "${{ env.SUCCESSFUL_BUILDS }}" "${{ env.FAILED_BUILDS }}" "${{ env.TIMESTAMP }}"
