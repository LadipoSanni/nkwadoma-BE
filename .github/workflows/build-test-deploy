name: Deploy to Dev Environment

on:
  push:
    branches:
      [ 'dev', 'main', 'prod-support']
  pull_request:
    branches:
      [ 'dev', 'main', 'prod-support']

env:
  EMAILS: 'ladipo@semicolon.africa,joshua.o@semicolon.africa'
  REPO_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com/nkwadoma
  ECR_REPOSITORY: nkwadoma
  ECR_REPOSITORY_SYSTEST: learnspace-backend-systest
  AWS_REGION: eu-west-1
  CLUSTER: learnspace.africa
  SERVICE: learnspace-backend-systest
  SYSTEST_SERVICE: learnspace-backend-systest
  SONARQUBE_URL_SET: false
  MAVEN_REPORT_URL_SET: false
  AUTOMATION_TEST_URL_SET: false

jobs:

  build_and_analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    outputs:
      sonarqube_url_set: ${{ steps.get_sonarqube_url.outputs.sonarqube_url_set }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run build and analyze script
        run: |
          chmod +x .github/workflows/scripts/build_and_analyze.sh
          .github/workflows/scripts/build_and_analyze.sh
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get SonarQube URL
        id: get_sonarqube_url
        if: always()
        run: |
          echo "sonarqube_url_set=true" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to Dev
    # needs: build_and_analyze
    runs-on: ubuntu-latest
    outputs:
      maven_report_url_set: ${{ steps.get_maven_report_url.outputs.maven_report_url_set }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run deploy script
        run: |
          chmod +x .github/workflows/scripts/deploy.sh
          .github/workflows/scripts/deploy.sh
        env:
          S3_BUCKET: semicolon-build-reports
          PROJECT_NAME: nkwadoma/learnspace-backend-systest/maven-reports
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get Maven Report URL
        id: get_maven_report_url
        if: always()
        run: |
          echo "maven_report_url_set=true" >> $GITHUB_OUTPUT

  run_tests:
    name: Run Automation Tests
    needs: deploy
    runs-on: ubuntu-latest
    outputs:
      automation_test_url_set: ${{ steps.get_automation_test_url.outputs.automation_test_url_set }}

    steps:
      - uses: actions/checkout@v3
      - name: Run tests script
        run: |
          chmod +x .github/workflows/scripts/run_tests.sh
          .github/workflows/scripts/run_tests.sh "${{ secrets.REPO_PAT }}"
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get Automation Test URL
        id: get_automation_test_url
        if: always()
        run: |
          echo "automation_test_url_set=true" >> $GITHUB_OUTPUT

  send_notification:
    name: Send Email Notification
    #needs: [build_and_analyze, deploy, run_tests]
    needs: [ deploy, run_tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |
          echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an <%ae>')" >> $GITHUB_ENV
          echo "SONARQUBE_URL_SET=${{ needs.build_and_analyze.outputs.sonarqube_url_set }}" >> $GITHUB_ENV
          echo "MAVEN_REPORT_URL_SET=${{ needs.deploy.outputs.maven_report_url_set }}" >> $GITHUB_ENV
          echo "AUTOMATION_TEST_URL_SET=${{ needs.run_tests.outputs.automation_test_url_set }}" >> $GITHUB_ENV

      - name: Send build success email notification
        if: success()
        env:
          SMTP_SERVER: semicolon.africa
          SMTP_PORT: 465
          SMTP_USERNAME: builds@semicolon.africa
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SONARQUBE_URL:  ${{ secrets.SONAR_HOST_URL }}
          MAVEN_REPORT_URL: https://semicolon-build-reports.s3.eu-west-1.amazonaws.com/nkwadoma/learnspace-backend-systest/maven-reports/new-reports/index.html
          AUTOMATION_TEST_URL: https://semicolon-build-reports.s3.eu-west-1.amazonaws.com/nkwadoma/learnspace-backend-systest/automation-tests-result/report-pytest-results.html
        run: |
          echo "Sending success email with the following details:"
          echo "SonarQube URL Set: $SONARQUBE_URL_SET"
          echo "SonarQube URL: $SONARQUBE_URL"
          echo "Maven Report URL Set: $MAVEN_REPORT_URL_SET"
          echo "Maven Report URL: $MAVEN_REPORT_URL"
          echo "Automation Test URL Set: $AUTOMATION_TEST_URL_SET"
          echo "Automation Test URL: $AUTOMATION_TEST_URL"
          chmod +x .github/workflows/scripts/send_success_email.sh
          .github/workflows/scripts/send_success_email.sh \
            "$SONARQUBE_URL" \
            "$AUTOMATION_TEST_URL" \
            "$MAVEN_REPORT_URL" \
            "$SMTP_SERVER" \
            "$SMTP_PORT" \
            "$SMTP_USERNAME" \
            "$SMTP_PASSWORD" \
            "${{ env.EMAILS }}" \
            "${{ env.TAG }}" \
            "${{ env.BRANCH_NAME }}" \
            "${{ env.COMMIT_AUTHOR }}" \
            "$SONARQUBE_URL_SET" \
            "$MAVEN_REPORT_URL_SET" \
            "$AUTOMATION_TEST_URL_SET"

      - name: Send build failure email notification
        if: failure()
        env:
          SMTP_SERVER: semicolon.africa
          SMTP_PORT: 465
          SMTP_USERNAME: builds@semicolon.africa
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          echo "Sending failure email with the following details:"
          echo "SonarQube URL Set: $SONARQUBE_URL_SET"
          echo "Maven Report URL Set: $MAVEN_REPORT_URL_SET"
          echo "Automation Test URL Set: $AUTOMATION_TEST_URL_SET"
          chmod +x .github/workflows/scripts/send_failure_email.sh
          .github/workflows/scripts/send_failure_email.sh \
            "$SMTP_SERVER" \
            "$SMTP_PORT" \
            "$SMTP_USERNAME" \
            "$SMTP_PASSWORD" \
            "${{ env.EMAILS }}" \
            "${{ env.TAG }}" \
            "${{ env.BRANCH_NAME }}" \
            "${{ env.COMMIT_AUTHOR }}" \
            "$SONARQUBE_URL_SET" \
            "$MAVEN_REPORT_URL_SET" \
            "$AUTOMATION_TEST_URL_SET"
